help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	rm -rf tmp dist .cache ./docs/Reference ./docs/Scripts .github/reports .pytest_cache .coverage .github/coverage_html_report
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	git fetch --prune
	git gc --prune=now --aggressive

uv-install:  ## Install uv on your system
	curl -LsSf https://astral.sh/uv/install.sh | sh
	@echo 'export PATH="$$HOME/.local/bin:$$PATH"' >> ~/.bashrc
	@echo 'Installed uv, please re-open your bash terminal or zsh terminal.'

format: ## Run pre-commit hooks
	pre-commit run -a

test: ## Run all tests
	pytest

submodule-init: ## Install and update all submodules
	git submodule update --recursive --init

submodule-update:  # Update all submodules
	git submodule update --recursive --remote

gen-docs:  ## Generate documentation
	uv run ./scripts/gen_docs.py --source ./src --output ./docs/Reference gen_docs
	uv run ./scripts/gen_docs.py --source ./scripts --output ./docs/Scripts gen_docs
